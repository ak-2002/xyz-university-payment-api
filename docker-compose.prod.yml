version: '3.8'

services:
  xyz-university-api:
    image: ghcr.io/${GITHUB_REPOSITORY:-ak-2002/xyz-university-payment-api}/xyz-university-payment-api:main
    container_name: xyz-university-api-prod
    ports:
      - "80:80"
      - "443:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Server=sqlserver-prod;Database=XYZUniversityDB;User Id=${DB_USER};Password=${DB_PASSWORD};TrustServerCertificate=true
      - ConnectionStrings__Redis=redis-prod:6379
      - Redis__InstanceName=xyz-university-api-prod:
      - JWT__SecretKey=${JWT_SECRET_KEY}
      - JWT__Issuer=${JWT_ISSUER}
      - JWT__Audience=${JWT_AUDIENCE}
    depends_on:
      - sqlserver-prod
      - redis-prod
    networks:
      - xyz-university-network
    restart: unless-stopped
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  sqlserver-prod:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver-prod
    environment:
      - SA_PASSWORD=${DB_PASSWORD}
      - ACCEPT_EULA=Y
      - MSSQL_PID=Enterprise
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data_prod:/var/opt/mssql
      - sqlserver_logs_prod:/var/opt/mssql/log
      - sqlserver_backup_prod:/var/opt/mssql/backup
    networks:
      - xyz-university-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G

  redis-prod:
    image: redis:7-alpine
    container_name: redis-prod
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_data_prod:/data
    networks:
      - xyz-university-network
    restart: unless-stopped
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  rabbitmq-prod:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq-prod
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data_prod:/var/lib/rabbitmq
    networks:
      - xyz-university-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  identity-server-prod:
    image: ghcr.io/${GITHUB_REPOSITORY:-ak-2002/xyz-university-payment-api}/identity-server:main
    container_name: identity-server-prod
    ports:
      - "5002:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Server=sqlserver-prod;Database=IdentityDB;User Id=${DB_USER};Password=${DB_PASSWORD};TrustServerCertificate=true
    depends_on:
      - sqlserver-prod
    networks:
      - xyz-university-network
    restart: unless-stopped
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  nginx:
    image: nginx:alpine
    container_name: nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - xyz-university-api
    networks:
      - xyz-university-network
    restart: unless-stopped

volumes:
  sqlserver_data_prod:
  sqlserver_logs_prod:
  sqlserver_backup_prod:
  redis_data_prod:
  rabbitmq_data_prod:

networks:
  xyz-university-network:
    driver: bridge 