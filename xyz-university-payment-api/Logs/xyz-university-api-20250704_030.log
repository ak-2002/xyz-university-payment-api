2025-07-04 11:56:52.376 +03:00 [INF] Ensuring database is created
2025-07-04 11:56:53.412 +03:00 [INF] Database created successfully
2025-07-04 11:56:53.418 +03:00 [INF] Seeding default roles and permissions
2025-07-04 11:56:53.988 +03:00 [INF] Valid data already seeded, skipping seeding process
2025-07-04 11:56:54.000 +03:00 [INF] Default roles and permissions seeded successfully
2025-07-04 11:56:54.149 +03:00 [INF] XYZ University Payment API started successfully
2025-07-04 11:56:54.322 +03:00 [INF] Configured endpoint PaymentProcessedMessage, Consumer: xyz_university_payment_api.Core.Application.Services.PaymentProcessedMessageConsumer
2025-07-04 11:56:54.341 +03:00 [INF] Configured endpoint PaymentFailedMessage, Consumer: xyz_university_payment_api.Core.Application.Services.PaymentFailedMessageConsumer
2025-07-04 11:56:54.354 +03:00 [INF] Configured endpoint PaymentValidationMessage, Consumer: xyz_university_payment_api.Core.Application.Services.PaymentValidationMessageConsumer
2025-07-04 11:56:54.730 +03:00 [INF] Bus started: "rabbitmq://localhost/"
2025-07-04 11:57:47.403 +03:00 [WRN] Failed to determine the https port for redirect.
2025-07-04 11:57:47.694 +03:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2025-07-04 11:57:47.736 +03:00 [INF] Generated access token for user admin with 1 roles and 16 permissions
2025-07-04 11:58:48.980 +03:00 [ERR] Error retrieving from cache for key: students_v3_2361786_1_10_StudentNumber_asc_False
StackExchange.Redis.RedisConnectionException: The message timed out in the backlog attempting to send because no connection became available (5000ms) - Last Connection Exception: It was not possible to connect to the redis server(s). ConnectTimeout, command=HMGET, timeout: 5000, inst: 0, qu: 0, qs: 0, aw: False, bw: CheckingForTimeout, rs: NotStarted, ws: Initializing, in: 0, last-in: 0, cur-in: 0, sync-ops: 0, async-ops: 1, serverEndpoint: localhost:6379, conn-sec: n/a, aoc: 0, mc: 1/1/0, mgr: 10 of 10 available, clientName: DESKTOP-F3AMJ10(SE.Redis-v2.7.27.49176), IOCP: (Busy=0,Free=1000,Min=1,Max=1000), WORKER: (Busy=1,Free=32766,Min=8,Max=32767), POOL: (Threads=8,QueuedItems=0,CompletedItems=386,Timers=9), v: 2.7.27.49176 (Please take a look at this article for some common client-side issues that can cause timeouts: https://stackexchange.github.io/StackExchange.Redis/Timeouts)
 ---> StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). ConnectTimeout
   --- End of inner exception stack trace ---
   at Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache.GetAndRefreshAsync(String key, Boolean getData, CancellationToken token)
   at Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache.GetAsync(String key, CancellationToken token)
   at Microsoft.Extensions.Caching.Distributed.DistributedCacheExtensions.GetStringAsync(IDistributedCache cache, String key, CancellationToken token)
   at xyz_university_payment_api.Core.Application.Services.CacheService.GetAsync[T](String key) in C:\Users\wanja\Desktop\jj\xyz-university-payment-api\xyz-university-payment-api\Core\Application\Services\CacheService.cs:line 29
2025-07-04 11:58:49.021 +03:00 [INF] Retrieving students V3 with filter: {"StudentNumber":null,"FullName":null,"Program":null,"IsActive":true,"CreatedFrom":null,"CreatedTo":null,"Tags":null,"MinTotalPayments":null,"MaxTotalPayments":null,"SearchTerm":null,"Metadata":null,"$type":"StudentFilterDtoV3"}
2025-07-04 11:58:54.974 +03:00 [ERR] Error setting cache for key: students_v3_2361786_1_10_StudentNumber_asc_False
StackExchange.Redis.RedisConnectionException: The message timed out in the backlog attempting to send because no connection became available (5000ms) - Last Connection Exception: It was not possible to connect to the redis server(s). ConnectTimeout, command=EVAL, timeout: 5000, inst: 0, qu: 0, qs: 0, aw: False, bw: CheckingForTimeout, rs: NotStarted, ws: Initializing, in: 0, last-in: 0, cur-in: 0, sync-ops: 0, async-ops: 2, serverEndpoint: localhost:6379, conn-sec: n/a, aoc: 0, mc: 1/1/0, mgr: 10 of 10 available, clientName: DESKTOP-F3AMJ10(SE.Redis-v2.7.27.49176), IOCP: (Busy=0,Free=1000,Min=1,Max=1000), WORKER: (Busy=1,Free=32766,Min=8,Max=32767), POOL: (Threads=8,QueuedItems=0,CompletedItems=427,Timers=9), v: 2.7.27.49176 (Please take a look at this article for some common client-side issues that can cause timeouts: https://stackexchange.github.io/StackExchange.Redis/Timeouts)
 ---> StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). ConnectTimeout
   --- End of inner exception stack trace ---
   at StackExchange.Redis.RedisDatabase.ScriptEvaluateAsync(String script, RedisKey[] keys, RedisValue[] values, CommandFlags flags) in /_/src/StackExchange.Redis/RedisDatabase.cs:line 1551
   at Microsoft.Extensions.Caching.StackExchangeRedis.RedisCache.SetAsync(String key, Byte[] value, DistributedCacheEntryOptions options, CancellationToken token)
   at xyz_university_payment_api.Core.Application.Services.CacheService.SetAsync[T](String key, T value, TimeSpan expiration) in C:\Users\wanja\Desktop\jj\xyz-university-payment-api\xyz-university-payment-api\Core\Application\Services\CacheService.cs:line 61
