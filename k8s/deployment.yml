apiVersion: apps/v1
kind: Deployment
metadata:
  name: xyz-university-api
  namespace: xyz-university
  labels:
    app: xyz-university-api
    version: v1.0.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: xyz-university-api
  template:
    metadata:
      labels:
        app: xyz-university-api
        version: v1.0.0
    spec:
      containers:
      - name: xyz-university-api
        image: ghcr.io/ak-2002/xyz-university-payment-api/xyz-university-payment-api:main
        ports:
        - containerPort: 80
          name: http
        - containerPort: 443
          name: https
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Production"
        - name: ConnectionStrings__DefaultConnection
          valueFrom:
            secretKeyRef:
              name: xyz-university-secrets
              key: connection-string
        - name: ConnectionStrings__Redis
          value: "redis-service:6379"
        - name: Redis__InstanceName
          value: "xyz-university-api-prod:"
        - name: JWT__SecretKey
          valueFrom:
            secretKeyRef:
              name: xyz-university-secrets
              key: jwt-secret
        - name: JWT__Issuer
          value: "xyz-university"
        - name: JWT__Audience
          value: "xyz-university-api"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: logs
        emptyDir: {}
      imagePullSecrets:
      - name: ghcr-secret
---
apiVersion: v1
kind: Service
metadata:
  name: xyz-university-api-service
  namespace: xyz-university
spec:
  selector:
    app: xyz-university-api
  ports:
  - name: http
    port: 80
    targetPort: 80
  - name: https
    port: 443
    targetPort: 443
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: xyz-university-api-ingress
  namespace: xyz-university
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - api.xyz-university.com
    secretName: xyz-university-tls
  rules:
  - host: api.xyz-university.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: xyz-university-api-service
            port:
              number: 80
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: xyz-university-api-hpa
  namespace: xyz-university
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: xyz-university-api
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80 