name: Deploy Application

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'development'
        type: choice
        options:
        - development
        - staging
        - production
      version:
        description: 'Version to deploy'
        required: false
        type: string

jobs:
  deploy:
    name: Deploy to ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Build and package application
      run: |
        echo "ðŸ”¨ Building application for ${{ github.event.inputs.environment }}..."
        
        # Restore dependencies
        dotnet restore xyz-university-payment-api/xyz-university-payment-api.csproj
        
        # Build application
        dotnet build xyz-university-payment-api/xyz-university-payment-api.csproj --configuration Release --no-restore
        
        # Publish application
        dotnet publish xyz-university-payment-api/xyz-university-payment-api.csproj \
          --configuration Release \
          --output ./publish \
          --self-contained false \
          --runtime linux-x64
        
        # Create deployment package
        VERSION="${{ github.event.inputs.version || 'latest' }}"
        tar -czf xyz-university-api-$VERSION.tar.gz -C ./publish .
        
        echo "ðŸ“¦ Application packaged successfully: xyz-university-api-$VERSION.tar.gz"

    - name: Deploy application
      run: |
        echo "ðŸš€ Deploying to ${{ github.event.inputs.environment }} environment..."
        echo "ðŸ“¦ Application packaged and ready for deployment"
        echo ""
        echo "Deployment Summary:"
        echo "- Environment: ${{ github.event.inputs.environment }}"
        echo "- Version: ${{ github.event.inputs.version || 'latest' }}"
        echo "- Package: xyz-university-api-${{ github.event.inputs.version || 'latest' }}.tar.gz"
        echo ""
        echo "Next steps:"
        echo "1. Download the deployment package"
        echo "2. Extract to your ${{ github.event.inputs.environment }} server"
        echo "3. Run: dotnet xyz-university-payment-api.dll"
        echo ""
        echo "For automated deployment, configure your hosting service integration."

    - name: Upload deployment package
      uses: actions/upload-artifact@v4
      with:
        name: deployment-package-${{ github.event.inputs.environment }}
        path: xyz-university-api-*.tar.gz

    - name: Notify deployment success
      run: |
        echo "âœ… Deployment to ${{ github.event.inputs.environment }} completed successfully!"
        echo "ðŸ“Š Application is ready for use" 